#!/bin/bash

function _daily-coding.extname
{
    declare -r name="$(basename "$1")"

    if [[ "$name" =~ \.[^.]*$ ]]; then
        echo "${BASH_REMATCH[0]}"
    else
        echo "$name"
    fi
}

function _daily-coding.root_path
{
    (cd "$(dirname "${BASH_SOURCE}")"/../.. && pwd)
}

function _daily-coding.root_workspace_path
{
    echo "${DAILY_CODING_ROOT_WORKSPACE_PATH:-$(_daily-coding.root_path)/workspace}"
}

function _daily-coding.to_workspace_path
{
    declare -r path="${1:-$(pwd)}"
    declare -r root_workspace_path="$(_daily-coding.root_workspace_path)"

    if [[ "$(realpath "${path}" --relative-to "${root_workspace_path}")" != ../* ]]; then
        echo "${root_workspace_path}/$(echo "${path#${root_workspace_path}/}" | cut -d/ -f1)"
    else
        echo ''
    fi
}

function _daily-coding.to_workspace_name
{
    declare -r workspace_path="$(_daily-coding.to_workspace_path "${1:-$(pwd)}")"
    echo "${workspace_path##*/}"
}

function _daily-coding.to_collection_path
{
    declare -r path="${1:-$(pwd)}"
    declare -r root_workspace_path="$(_daily-coding.root_workspace_path)"
    declare -r relative_path="$(realpath "${root_workspace_path}" --relative-to "${path}")"

    if [[ "${relative_path}" =~ ^..(/..)+$ ]]; then
        declare -r workspace_collection_name="$(
            realpath "${path}" --relative-base "${root_workspace_path}" | cut -d/ -f1,2)"
        echo "${root_workspace_path}/${workspace_collection_name}"
    else
        echo ''
    fi
}

function _daily-coding.to_collection_name
{
    declare -r collection_path="$(_daily-coding.to_collection_path "${1:-$(pwd)}")"
    echo "${collection_path##*/}"
}

function _daily-coding.locate_file
{
    declare -r root_workspace_path="$(_daily-coding.root_workspace_path)"
    declare -r base_workspace_name="$(_daily-coding.to_workspace_name "$1")"
    declare -r base_collection_name="$(_daily-coding.to_collection_name "$1")"
    declare -r base_file_name="$(basename "$1")"

    declare -r n=$2
    declare -r target_file_path="$(
        ls -1 "${root_workspace_path}"/*/"${base_collection_name}/${base_file_name}" |
            ([[ $n -ge 0 ]] && cat || tac) |
            sed -n "/${base_workspace_name}/,$ p" |
            sed -n "$((n < 0 ? -n+1 : n+1)) p"
    )"

    if [[ ! -f "${target_file_path}" ]]; then
        echo ''
    else
        echo "$(realpath "${target_file_path}" --relative-to "$(pwd)")"
    fi
}

function _daily-coding.locate_collection
{
    declare -r root_workspace_path="$(_daily-coding.root_workspace_path)"
    declare -r base_collection_path="$(_daily-coding.to_collection_path "$1")"
    declare -r base_collection_name="$(_daily-coding.to_collection_name "$1")"
    declare -r base_workspace_name="$(_daily-coding.to_workspace_name "$1")"

    declare -r n=$2
    declare -r target_collection_path="$(
        ls -1d "${root_workspace_path}"/*/"${base_collection_name}" |
            ([[ $n -ge 0 ]] && cat || tac) |
            sed -n "/${base_workspace_name}\/${base_collection_name}/,$ p" |
            sed -n "$((n < 0 ? -n+1 : n+1)) p"
    )"

    if [[ ! -d "${target_collection_path}" ]]; then
        echo ''
    else
        echo "$(realpath "${target_collection_path}" --relative-to "$(pwd)")"
    fi
}

function _daily-coding.locate_workspace
{
    declare -r root_workspace_path="$(_daily-coding.root_workspace_path)"
    declare -r base_workspace_path="$1"
    declare -r base_workspace_name="$(basename "$1")"
    declare -r n=$2

    declare -r target_workspace_path="$(
        cat <(ls -1d "${root_workspace_path}"/*) \
            <(echo "${root_workspace_path}/${base_workspace_name}") |
            sort -u |
            ([[ $n -ge 0 ]] && cat || tac) |
            sed -n "/${base_workspace_name}/,$ p" |
            sed -n "$((n < 0 ? -n+1 : n+1)) p"
    )"

    if [[ "${target_workspace_path}" = '' ]]; then
        echo ''
    else
        echo "$(realpath "${target_workspace_path}" --relative-to "$(pwd)")"
    fi
}

function _daily-coding.generate_jsonl
{
    (
        cd "$(_daily-coding.root_workspace_path)"

        while read lines path
        do
            path="${path#./}"
            declare workspace="${path%%/*}"
            path="${path#*/}"
            declare collection="${path%%/*}"
            declare language="${collection##*.}"
            path="${path#*/}"
            declare file="${path}"
            declare extension="$(_daily-coding.extname "${path}")"

            echo "{\"workspace\": \"${workspace}\", \"collection\": \"${collection}\", \"language\": \"${language}\", \"file\": \"${file}\", \"extension\": \"${extension}\", \"lines\": ${lines}}"
        done < <(find . -type f | sort | xargs wc -l | sed -r '/^ *[0-9]+ total$/d')
    )
}

