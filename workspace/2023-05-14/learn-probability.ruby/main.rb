#
# 不良品率 10% の 1 箱に 12 ダース詰めるとする.
# 100 箱のうち何箱が不良品を含まない箱と見なすことができるか.
#
# 良品率と不良品率:
#  * 良品率 = 90%
#  * 不良品率 = 10%
#
# ある箱の中に不良品が N 個入っている確率:
#  * 不良品が 0 個の確率 = 12C0 * (0.1 ** 0) * (0.9 ** 12)
#  * 不良品が 1 個の確率 = 12C1 * (0.1 ** 1) * (0.9 ** 11)
#  * 不良品が 2 個の確率 = 12C2 * (0.1 ** 2) * (0.9 ** 10)
#  * ...
#  * 不良品が 12 個の確率 = 12C12 * (0.1 ** 12) * (0.9 ** 0)
#

def main
    # ある箱に不良品が n 個含まれる確率 p を求める.
    n = 0
    p = combination(12, 0) * (0.1 ** n) * (0.9 ** (12 - n))

    puts "ある箱に不良品が #{n} 個含まれる確率 = #{p}"
    puts "100 箱のうち不良品を含まないと見なすことができる箱の数 = #{(p * 100).round}"
end

def combination(n, r)
    (1..n).reduce(1, :*) / (1..r).reduce(1, :*) / (1..n-r).reduce(1, :*)
end

main

